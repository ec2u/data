/*
 * Copyright © 2020-2025 EC2U Alliance
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package eu.ec2u.data.resources;

import com.metreeca.mesh.meta.jsonld.*;
import com.metreeca.mesh.meta.jsonld.Class;
import com.metreeca.mesh.meta.shacl.Required;

import eu.ec2u.data.universities.University;

import java.util.stream.Stream;

import static eu.ec2u.data.EC2U.BASE;
import static java.util.function.Predicate.not;
import static java.util.stream.Collectors.joining;

@Frame
@Class
@Base(BASE)
@Namespace(prefix="[ec2u]", value="/terms/")
public interface Resource extends Reference {

    static String bullets(final Stream<String> strings) {
        return strings
                .distinct()
                .filter(not(String::isBlank))
                .map("- %s\n"::formatted)
                .collect(joining());
    }


    //̸/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    /**
     * @return {@code true}, if the resource is even partially generated by AI tools; {@code false}, otherwise
     */
    boolean generated();

    String version();


    @Required Collection collection();

    University university();


    @Hidden
    String embedding();

    @Internal
    String embeddable();

}
