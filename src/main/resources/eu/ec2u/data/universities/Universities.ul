prefix ec2u: <https://data.ec2u.eu/terms/>

prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix wdt: <http://www.wikidata.org/prop/direct/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>
prefix wgs84: <http://www.w3.org/2003/01/geo/wgs84_pos#>
prefix org: <http://www.w3.org/ns/org#>
PREFIX void: <http://rdfs.org/ns/void#>
PREFIX dct: <http://purl.org/dc/terms/>

insert {

    ?university org:subOrganizationOf <https://ec2u.eu/> .

} where {

    ?university a ec2u:University .

}; # complete entry

insert {

    ?university

        ec2u:city ?city ;
        ec2u:country ?country ;
        ec2u:students ?students ;
        ec2u:inception ?inception ;

        wgs84:lat ?lat ;
        wgs84:long ?long.

} where {

    ?university a ec2u:University ;
        rdfs:seeAlso ?wikidata .

    optional { ?wikidata wdt:P131 ?city }
    optional { ?wikidata wdt:P17 ?country }
    optional { ?wikidata wdt:P2196 ?students_ }
    optional { ?wikidata wdt:P571 ?inception_ }

    optional {
        ?city wgs84:lat ?lat ;
            wgs84:long ?long
    }

    bind (xsd:integer(?students_) as ?students)
    bind (strdt(str(year(?inception_)), xsd:gYear) as ?inception)

}; # lift background info from wikidata


delete {

    ?dataset
        void:subset ?subset.

    ?university
        ec2u:scope ?subset .

    ?subset
        ec2u:partner ?university ;
        void:entities ?entities.

} where {

    ?dataset a void:Dataset ;
        void:subset ?subset .

    ?university a ec2u:University ;
        ec2u:scope ?subset .

    ?subset a void:Dataset ;
        ec2u:partner ?university ;
        void:entities ?entities .

};  # delete dataset partitions

insert {

    ?dataset
        void:subset ?subset .

    ?university
        ec2u:scope ?subset .

    ?subset
        ec2u:partner ?university ;
        void:entities ?entities .

} where {

    bind (uuid() as ?subset)

    {
        select ?university ?dataset (count(distinct ?member) as ?entities)
        where {

            ?university a ec2u:University .

            ?dataset a void:Dataset ;
                dct:issued [] ; # only if published
                rdfs:member ?member .

            ?member ec2u:partner ?university .

        }
        group by ?university ?dataset

    }

} # compute dataset partitions